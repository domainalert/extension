{"version":3,"file":"background.js","mappings":"mBAAO,IAuCMA,EAAsB,SAACC,GAChCC,OAAOC,cAAcC,OAAO,GAAI,CAC5BC,MAAO,cACPJ,QAASA,EACTK,QAAS,qBACTC,KAAM,SAEd,EC5CAL,OAAOM,OAAOC,UAAUC,aAAY,WAChCR,OAAOS,KAAKC,MAAM,CAACC,QAAQ,EAAMC,eAAe,IAAO,SAAUH,GAE7D,IACII,EDNiB,SAACA,GAC1B,IAAKA,EACD,OAAO,KAGX,IACIC,EADY,IAAIC,IAAIF,GACFG,SAASC,MAAM,KAErC,OAAIH,EAAMI,OAAS,EACRJ,EAAMK,OAAO,GAAGC,KAAK,KACJ,IAAjBN,EAAMI,OACNJ,EAAMM,KAAK,KAGf,IACX,CCTkBC,CADMZ,EAAK,GACaI,MDWX,SAACA,GAC5B,OAAOb,OAAOsB,QAAQC,MAAMC,IAAI,CAC5BC,OAAQ,KACTC,MAAK,SAAUC,GACd,IAAKA,EAAKF,QAAUE,EAAKF,OAAOP,OAAS,GAErC,MADApB,EAAoB,8BACd,IAAI8B,MAAM,qBAEpB,OAAOC,MAAM,sCAAuC,CAChDC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACV,cAAiB,UAAYJ,EAAKF,QAEtCO,KAAMC,KAAKC,UAAU,CACjBC,QAAS,CAACtB,MAGtB,GACJ,EC7BQuB,CAAgBvB,GACXa,MAAK,WACF5B,EAAoB,6BAA+Be,EAAM,8BAC7D,GACR,GACJ,G","sources":["webpack://empty-project/./scripts/functions.js","webpack://empty-project/./scripts/index.js"],"sourcesContent":["export const getRootDomain = (url) => {\n    if (!url) {\n        return null\n    }\n\n    let urlObject = new URL(url);\n    let parts = urlObject.hostname.split('.');\n\n    if (parts.length > 2) {\n        return parts.slice(-3).join('.');\n    } else if (parts.length === 2) {\n        return parts.join('.');\n    }\n\n    return null;\n}\n\nexport const startMonitoring = (url) => {\n    return chrome.storage.local.get({\n        apikey: '',\n    }).then(function (data) {\n        if (!data.apikey && data.apikey.length < 10) {\n            triggerNotification('Please specify an api key.')\n            throw new Error('No api key found.')\n        }\n        return fetch('https://domainalert.app/api/domains', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': 'Bearer ' + data.apikey\n            },\n            body: JSON.stringify({\n                domains: [url]\n            })\n        })\n    })\n}\n\nexport const triggerNotification = (message) => {\n    chrome.notifications.create('', {\n        title: 'DomainAlert',\n        message: message,\n        iconUrl: 'images/icon128.png',\n        type: 'basic'\n    });\n}\n","import {getRootDomain, startMonitoring, triggerNotification} from \"./functions\";\n\nchrome.action.onClicked.addListener(() => {\n    chrome.tabs.query({active: true, currentWindow: true}, function (tabs) {\n        // Only one tab should be active, so this only has one entry\n        let activeTab = tabs[0];\n        let url = getRootDomain(activeTab.url)\n\n        startMonitoring(url)\n            .then(() => {\n                triggerNotification('We will let you know once ' + url + ' is available for purchase!')\n            })\n    });\n});\n"],"names":["triggerNotification","message","chrome","notifications","create","title","iconUrl","type","action","onClicked","addListener","tabs","query","active","currentWindow","url","parts","URL","hostname","split","length","slice","join","getRootDomain","storage","local","get","apikey","then","data","Error","fetch","method","headers","body","JSON","stringify","domains","startMonitoring"],"sourceRoot":""}